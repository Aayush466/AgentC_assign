import React from "react";
import SideImage from "../../assets/Side_Image.png";
import { useForm } from "react-hook-form";
import { yupResolver } from "@hookform/resolvers/yup";
import * as yup from "yup";
import { useDispatch, useSelector } from "react-redux";
import { submitForm } from "../../Slice/FormSlice";

const schema = yup.object().shape({
  name: yup
    .string()
    .min(3, "Minimum 3 letter required ")
    .max(25)
    .required("Name is required"),
  email: yup.string().email("Invalid email").required("Email is required"),
  url: yup.string().url("Invalid email"),
  project: yup
    .string()
    .min(20, "Project Detail must be 10 Characters  ")
    .required("Project Detail is required"),
});
export const Main = () => {
  const { status, error } = useSelector((state) => state.form);
  const dispatch = useDispatch();
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm({
    resolver: yupResolver(schema),
  });

  const onSubmit = (data) => {
    dispatch(submitForm(data));
  };
  return (
    <>
      <div className="grid grid-cols-2 mt-6 ">
        <div className="m-[100px]">
          <img src={SideImage} alt="Side Image  " />
        </div>
        {/* //form  */}
        <div className="m-[100px] ">
          <div className="mb-[50px]">
            <h1 className="text-4xl font-bold text-right leading-snug">
              We'd Love to hear{" "}
            </h1>
            <h1 className="text-4xl font-bold text-right leading-snug">
              from you
            </h1>
          </div>

          <form onSubmit={handleSubmit(onSubmit)}>
            <div className="mb-[20px] ">
              {/* <label>Name:</label> */}
              <input
                type="text*"
                {...register("name")}
                className="border border-black p-4 w-full text-base placeholder-black "
                placeholder="Name*"
              />
              <p>{errors.name?.message}</p>
            </div>
            <div className="mb-[20px]">
              {/* <label>Email:</label> */}
              <input
                type="email"
                {...register("email")}
                className="border border-black  p-4 w-full text-base placeholder-black  "
                placeholder="Email*"
              />
              <p>{errors.email?.message}</p>
            </div>
            <div className="mb-[20px]">
              {/* <label>webSite URL</label> */}
              <input
                type="url"
                {...register("url")}
                className="border border-black  p-4 w-full text-base placeholder-black  "
                placeholder="Website url"
              />
              <p>{errors.message?.message}</p>
            </div>
            <div className="mb-[20px]">
              {/* <label>Project Details</label> */}
              <textarea
                {...register("project")}
                className="border w-full text-base placeholder-black h-40 p-4 border-black"
                placeholder="Project Details*"
              ></textarea>
              <p>{errors.message?.message}</p>
            </div>
            <button
              type="submit"
              className="border border-gray-500 p-5 rounded w-full bg-black text-white bottom-0 mt-[20px] text-lg"
              disabled={status === "loading"}
            >
              {status === "loading" ? "Send Proposal..." : "Send Proposal"}
            </button>
            {status === "succeeded" && (
              <h2 className="text-center text-2xl">
                Form submitted successfully!
              </h2>
            )}
            {status === "failed" && (
              <h1 className="text-center text-2xl">Error: {error}</h1>
            )}
          </form>
        </div>
      </div>
    </>
  );
};


// next 
return (
  <div className="grid grid-cols-1 lg:grid-cols-2 mt-6 px-4 lg:px-20">
    {/* Image Section */}
    <div className="flex justify-center items-center mb-6 lg:mb-0">
      <img src={SideImage} alt="Side" className="max-w-full h-auto" />
    </div>

    {/* Form Section */}
    <div className="bg-white p-6 lg:p-12 rounded shadow-md">
      <div className="mb-6 text-center lg:text-right">
        <h1 className="text-2xl lg:text-4xl font-bold">We'd Love to Hear</h1>
        <h1 className="text-2xl lg:text-4xl font-bold">From You</h1>
      </div>

      <form onSubmit={handleSubmit(onSubmit)}>
        <div className="mb-4">
          <input
            type="text"
            {...register("name")}
            className="border border-gray-300 p-3 w-full rounded text-base placeholder-gray-500"
            placeholder="Name*"
          />
          <p className="text-red-500 text-sm mt-1">{errors.name?.message}</p>
        </div>

        <div className="mb-4">
          <input
            type="email"
            {...register("email")}
            className="border border-gray-300 p-3 w-full rounded text-base placeholder-gray-500"
            placeholder="Email*"
          />
          <p className="text-red-500 text-sm mt-1">{errors.email?.message}</p>
        </div>

        <div className="mb-4">
          <input
            type="url"
            {...register("url")}
            className="border border-gray-300 p-3 w-full rounded text-base placeholder-gray-500"
            placeholder="Website URL"
          />
          <p className="text-red-500 text-sm mt-1">{errors.url?.message}</p>
        </div>

        <div className="mb-4">
          <textarea
            {...register("project")}
            className="border border-gray-300 p-3 w-full rounded text-base placeholder-gray-500 h-32 resize-none"
            placeholder="Project Details*"
          ></textarea>
          <p className="text-red-500 text-sm mt-1">{errors.project?.message}</p>
        </div>

        <button
          type="submit"
          className={`w-full py-3 rounded text-lg font-semibold text-white ${
            status === "loading" ? "bg-gray-500" : "bg-black hover:bg-gray-800"
          }`}
          disabled={status === "loading"}
        >
          {status === "loading" ? "Sending..." : "Send Proposal"}
        </button>

        {status === "succeeded" && (
          <h2 className="text-center text-lg text-green-600 mt-4">
            Form submitted successfully!
          </h2>
        )}
        {status === "failed" && (
          <h2 className="text-center text-lg text-red-600 mt-4">
            Error: {error}
          </h2>
        )}
      </form>
    </div>
  </div>
);